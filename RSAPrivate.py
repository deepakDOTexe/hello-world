from Crypto.PublicKey import RSA
from Crypto.Util.number import *
import gmpy2


p = 9459087979866534301854579339627517281880871857987098205400542290909533812510627152878341353678910479880680875722839306063829321130837210213784261581387173
q = 9896984395151566492448748862139262345387297785144637332499966426571398040295087125558780121504834847289828037371643927199404615218623314326851473129699891
n = p*q
e = 65537
phi = (p-1)*(q-1)
d = gmpy2.invert(e,phi)
# print(d)

c=88832672365668167529857379894865433511182844744312045345076041875187474818262091522025558499931749152058573002322687937738247222776556333702190182855219311686773379316859786106286726970232456753950114462088293004731180044926831073614897231818796677634574930807330152945345567772958799209048231625940307886528

ans=pow(c,d,n)

msg=long_to_bytes(ans)

print(msg)
